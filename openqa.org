# -*- org-confirm-babel-evaluate: nil; -*-
#+AUTHOR: Dan Čermák
#+DATE: 29.1.2022
#+EMAIL: dcermak@suse.com
#+TITLE: openQA
#+SUBTITLE: Testing Linux Distributions and Appliances


#+REVEAL_ROOT: ./node_modules/reveal.js/
#+REVEAL_THEME: simple
#+REVEAL_PLUGINS: (highlight notes history)
#+OPTIONS: toc:nil
#+REVEAL_DEFAULT_FRAG_STYLE: appear
#+REVEAL_INIT_OPTIONS: transition: 'none', hash: true
#+OPTIONS: num:nil toc:nil center:nil reveal_title_slide:nil
#+REVEAL_EXTRA_CSS: ./node_modules/@fortawesome/fontawesome-free/css/all.min.css
#+REVEAL_HIGHLIGHT_CSS: ./node_modules/reveal.js/plugin/highlight/zenburn.css

#+REVEAL_TITLE_SLIDE: <h2 class="title"><img src="./media/openqa_logo.svg" height="100px" style="margin-bottom:-20px"/> %t</h2>
#+REVEAL_TITLE_SLIDE: <p class="subtitle" style="color: Gray;">%s</p>
#+REVEAL_TITLE_SLIDE: <p class="author">%a</p>
#+REVEAL_TITLE_SLIDE: <img src="./media/devconf-cz-bw.svg" height="50px"/>
#+REVEAL_TITLE_SLIDE: <p class="date">%d</p>
#+REVEAL_TITLE_SLIDE: <p xmlns:dct="http://purl.org/dc/terms/" xmlns:cc="http://creativecommons.org/ns#"><a href="https://creativecommons.org/licenses/by/4.0" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">
#+REVEAL_TITLE_SLIDE: CC BY 4.0 <i class="fab fa-creative-commons"></i> <i class="fab fa-creative-commons-by"></i></a></p>


* who -u

Dan Čermák

#+REVEAL_HTML: <p style="text-align:left">
#+REVEAL_HTML: <ul>
#+REVEAL_HTML: <li style="list-style-type:none;"><i class="fab fa-suse"></i> Software Developer @SUSE
#+REVEAL_HTML: <li style="list-style-type:none;"><i class="fab fa-fedora"></i> i3 SIG, Package maintainer
#+REVEAL_HTML: <li style="list-style-type:none;"><i class="far fa-heart"></i> developer tools, testing and documentation</li>
#+REVEAL_HTML: <li style="list-style-type:none;">&nbsp</li>
#+REVEAL_HTML: <li style="list-style-type:none;"><i class="fab fa-github"></i> <a href="https://github.com/D4N/">D4N</a> / <a href="https://github.com/dcermak/">dcermak</a></li>
#+REVEAL_HTML: <li style="list-style-type:none;"><i class="fab fa-mastodon"></i> <a href="https://mastodon.social/@Defolos">@Defolos@mastodon.social</a></li>
#+REVEAL_HTML: <li style="list-style-type:none;"><i class="fab fa-twitter"></i> <a href="https://twitter.com/DefolosDC/">@DefolosDC</a></li>
#+REVEAL_HTML: </ul>


* Agenda

  - [[What is openQA?][What is openQA?]]
  - [[openQA in the Wild][openQA in the Wild]]
  - [[Questions?][Questions?]]

* What is openQA?

#+begin_notes
- web frontend, actually whole framework to test a SUT
- tests are SUT centric, not application/library centric!

- automates user input (key presses, mouse movement)
- grab video feed from SUT \rarr image recognition via OpenCV
- operating system agnostic
#+end_notes

#+ATTR_REVEAL: :frag (appear)
- a web application
- automated test framework for a SUT

- simulate user input
- match video feed using OpenCV


** Sales Pitch

#+begin_notes
Why should you all care?
- automates user input \rarr auto test appliance
- can run tests on nearly any\trade hardware (with limitations)
- tagging & labeling according to regexes,
  carry over of attached bug reports,
  various failure states
  \Rightarrow use for reviews of a full test suite run
#+end_notes

Why should I use openQA?
#+ATTR_REVEAL: :frag (appear)
- automate manual system level testing
- @@html: <i class="fas fa-users"></i>@@ user-centric testing
- runs on bare metal
- test labeling: @@html:<i class="fas fa-tags"></i>@@, @@html:<i class="fas fa-bug"></i>@@ and reviews
- battle tested (used at @@html: <i class="fab fa-suse"></i>, <i class="fab fa-fedora"></i>, <i class="fab fa-redhat"></i>@@, …)


** Architecture

#+BEGIN_NOTES
- openQA runs web app & REST API (\rarr for client libraries)
  schedules tests, stores test results & artifacts
- individual tests dispatched to workers (can be other machine or the same)
- worker spawns =os-autoinst= on SUT (usually qemu, can be bare metal or other virt)
- =os-autoinst= does heavy lifting: issue input, record output, match images
- =os-autoinst= communicates via serial line by default (can be "upgraded" later on)
- image matching is *not* mandatory, works without it!
#+END_NOTES

#+REVEAL_HTML: <img src="./media/openqa_architecture.svg" height="500px"/>


** Web UI

# from https://openqa.fedoraproject.org/tests/1111934#step/disk_guided_empty/4
@@html:<img src="./media/screenshot_openqa_webui.png"/>@@

#+REVEAL: split

# cut from: https://openqa.opensuse.org/tests/2150810/file/video.ogv
@@html:<video height="600" controls><source src="media/openqa.mp4" type="video/mp4"></video>@@

** Image Recognition

#+begin_notes
this is a *feature*, can run openQA without

video matched via *needles*:
- json & png with areas & similarity level
- needles specify tags (used by testapi \rarr needles matched by tag, not by filename)
- =isotovideo= matches needles against video feed received via VNC
- areas matched needn't be in same position w.r.t each other
- matching occurs about once per sec
#+end_notes

@@html:<img src="./media/openqa_needle_view.png" height="500px"/>@@


** Features

#+begin_notes
- test results can be collected & uploaded (e.g. VM disk or files)
- tests can depend on each other \rarr are scheduled accordingly & displayed in the webUI
- full workflows can be tagged, reviewed
- attach labels for bugs/features/issues to tests via comments
- test groups that run "scenarios" (= test with additional parameters)
- plethora of backends besides qemu: ipmi, x3270 (for s390), bare metal
#+end_notes

#+ATTR_REVEAL: :frag (appear)
- @@html: <i class="far fa-hdd"></i>@@ produce test artifacts & handle assets
- @@html: <i class="fas fa-code-branch"></i>@@ dependency between tests & scheduling
- @@html: <i class="fas fa-tags"></i>@@ tag & review workflows and tests
- @@html: <i class="fas fa-layer-group"></i>@@ test grouping
- support qemu/libvirt, ipmi, bare metal, x3270


* openQA in the Wild

** openSUSE

#+begin_notes
- each Tumbleweed snapshot or staging project is copied by a bot to =o3=
  \rarr bot triggers a test run on =o3= and reports back on =OBS=
- all new Leap snapshots get tested in [[https://openqa.opensuse.org/][o3]]
- testing on bare metal
- used extensively for SLE testing as well

testing strategy:
1. create bootable disks \rarr save as artifacts
2. run tests on disk or create another disk + 3rd stage
#+end_notes

@@html: <img src="./media/opensuse_release_tools-workflow-overview.svg"/>@@

#+REVEAL: split

@@html: <img src="./media/opensuse_release_tools-workflow_overview-highlight.svg"/>@@

#+REVEAL: split

@@html: <img src="./media/obs_staging_openqa_report.png"/>@@


** Fedora

#+begin_notes
- successful compose automatically triggers a test run on openqa
  \rarr test results get emailed to devel
- bodhi runs openqa tests for critpath updates
#+end_notes

@@html: <img src="./media/Fedora_release_process.svg" height="400"/>@@

#+REVEAL: split

@@html: <img src="./media/bodhi_kernel_openqa.png" height="400"/>@@

** Kiwi Image Builder

@@html: <img src="./media/kiwi_no_testing.svg" height="500"/>@@
#+REVEAL: split
@@html: <img src="./media/kiwi_build_testing.svg" height="500"/>@@
#+REVEAL: split
@@html: <img src="./media/kiwi_testing.svg" height="500"/>@@


** Bare Metal Testing on the RPi

#+begin_notes
- have to power cycle the Pi (\rarr e.g. Kasa wifi plug or PoE)
- need to reflash the image (\rarr USB-SD-Mux from Linux Automation GmbH)

workflow:
1. worker (can be any machine) uploads new image to SD card
2. power cycle the Pi
3. connect via serial line
4. login & setup ssh connection for vnc
5. run tests \rarr *PROFIT!*

on failure:
- try to shutdown via serial line
- turn pi off forcefully

future additions:
- test HDMI output too
#+end_notes

#+REVEAL_HTML: <img src="./media/rpi_testing.svg" height="500px"/>

#+REVEAL: split

#+REVEAL_HTML: <img src="./media/20210216_160449.jpg" height="600px"/>


** Qubes OS

#+BEGIN_NOTES
#+END_NOTES

@@html:<i class="fas fa-laptop-code"> </i>@@ [[https://github.com/marmarek/qubes-posts/blob/ac88592aecfee4f83a30f50c15c901a2db031955/2021-11-17-openqa.md][Bare Metal Testing]]

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/qubes_os_button.jpg" height="400px"/>@@

* Get in Touch

- on irc.libera.chat: [[irc:#opensuse-factory:irc.libera.chat][#opensuse-factory]]
- on matrix: [[https://matrix.to/#/#openqa:opensuse.org][#openqa:opensuse.org]] and [[https://matrix.to/#/#quality:fedoraproject.org][#quality:fedoraproject.org]]


* Links

- source code: @@html: <i class="fab fa-github"></i>@@ [[https://github.com/os-autoinst/][os-autoinst]]
- [[https://open.qa][openQA Homepage]]
- [[https://openqa.opensuse.org][openSUSE's instance]]
- [[https://openqa.fedoraproject.org][Fedora's instance]]
- [[https://openqa.qubes-os.org][QubesOS' instance]]
- slides: @@html: <i class="fab fa-github"></i>@@ [[https://github.com/dcermak/devconf.cz_2022][=dcermak/devconf.cz_2022=]]


* Questions?

#+ATTR_REVEAL: :frag appear :frag_idx 1
*Answers!*

* Legal

- GPL-2.0-or-later: [[https://raw.githubusercontent.com/os-autoinst/openQA/master/assets/images/logo.svg][openQA Logo]], [[https://raw.githubusercontent.com/openSUSE/open-build-service/master/docs/obs-logo.svg][OBS Logo]], [[https://raw.githubusercontent.com/fedora-infra/bodhi/develop/bodhi/server/static/img/bodhi-logo.svg][Bodhi Logo]], [[https://raw.githubusercontent.com/openSUSE/openSUSE-release-tools/master/docs/res/workflow-overview.svg][openSUSE Release Process]]
- MIT: [[https://revealjs.com/][reveal.js]], [[https://eos-icons.com/][EOS Icons]]
- GPL-3.0-or-later or GPL-3.0: [[https://raw.githubusercontent.com/devconfcz/devconf/master/assets/media/logo/devconf-cz/devconf-cz-bw.svg][DevConf CZ Logo]]
- GPL-3.0-or-later: [[https://raw.githubusercontent.com/OSInside/kiwi/master/doc/source/.images/kiwi-logo.png][KIWI Logo]]
- CC-BY-4.0 and SIL OFL 1.1 and MIT: [[https://fontawesome.com/][Font Awesome]]
- CC-BY-SA-3.0: [[https://git-scm.com/downloads/logos][Git Logo]]
- [[https://upload.wikimedia.org/wikipedia/en/c/cb/Raspberry_Pi_Logo.svg][Raspberry Pi Logo]] \copy and \trade of the Raspberry Pi Foundation
- [[https://opencv.org/wp-content/uploads/2020/07/OpenCV_logo_black.svg][OpenCV Logo]] \copy OpenCV
- RPi testing photo by [[https://twitter.com/GardetGuillaume][Guillaume Gardet]]
- QubesOS Servo photo by [[https://blog.marmarek.net/about/][Marek Marczykowski-Górecki]]
